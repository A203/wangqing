package com.geminno.homework;



       //可攻击的
		interface Assaultable {
			 void attack();
		}

		//可移动的
		interface Mobile {
			  void move();
		}

		//实现接口
		abstract class Weapon implements Assaultable, Mobile {
			public abstract void attack();
			public abstract void move();
		}

		class Tank extends Weapon {
			public void attack() {
				System.out.println("Tank attacks");
				}
			public void move() {
				System.out.println("Tank moves");
				}
			}

		
		class Flighter extends Weapon {
			public void attack() {
				System.out.println("Flighter attacks");
				}
			public void move() {
				System.out.println("Flighter moves");
				}
			}
		
		class WarShip extends Weapon {
			public void attack() {
				System.out.println("WarShip attacks");
				}
			public void move() {
				System.out.println("WarShip moves");
				}
			}
		
		class Army{
			Weapon[] w;
			int max;
			int j=0;
			public int getMax(){
				return max;
			}
			
			public void setMax(int max){
				this.max=max;
			}
			
			
			public Army(int max){
				w=new Weapon[max];
				this.max=max;
				System.out.println("您最多拥有"+max+"个武器！！！");
			}
			
			public void addWeapon(Weapon wa){
				if(j<getMax()){
					System.out.println("武器库足够！"+"已增加"+(j+1)+"个武器");
					w[j]=wa;
					j++;
				}
				else{
					System.out.println("警告：武器库已满！！！不能增加武器！！！");
				}
			}
			
			public void attackAll(){
				System.out.println("所有武器准备战斗");
				for(int i=0;i<w.length;i++){
					System.out.println((i+1)+"号");
					w[i].attack();
				}
			}
			
			public void moveAll() {
				System.out.println();
				System.out.println("所有武器准备移动！！！");
				for(int i=0;i<w.length;i++){
					System.out.println((i+1)+"号");
					w[i].move();
						}
					}
				}
		
		public class Demo{

			public static void main(String[] args) {
				
				 Army a = new Army(4);
				 a.addWeapon(new Tank());
				 a.addWeapon(new Flighter());
				 a.addWeapon(new WarShip());
				 a.attackAll();
				 a.moveAll();
				 }
		}
		
		
		
		
		
		
		
		